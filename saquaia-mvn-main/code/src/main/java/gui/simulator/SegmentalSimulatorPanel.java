package gui.simulator;

import benchmarking.simulatorconfiguration.SegmentalConfig;
import benchmarking.simulatorconfiguration.SimulatorConfig;
import core.simulation.simulators.segmental.GrowingMemoryFunction;
import core.util.IO;
import javax.swing.table.TableModel;

/**
 *
 * @author Martin
 */
public class SegmentalSimulatorPanel extends javax.swing.JPanel {

    private static final double SLIDER_MEMORY_SCALING_CONSTANT = 10;
    
    private SimulatorConfig base;
    
    /**
     * Creates new form SegmentalSimulatorPanel
     * @param initial initial values
     */
    public SegmentalSimulatorPanel(SegmentalConfig initial) {
        initComponents();
        
        setSegmentalConfig(initial);
    }
    
    public final void setSegmentalConfig(SegmentalConfig conf) {
        // initial values
        sliderMemory.setValue((int) (conf.getMax_memory() / 1000 / 1000));
        sliderFractionAbs.setValue((int) (conf.getMemoryFractionForAbsCache() * 100));
        checkBoxSummaries.setSelected(conf.isUseSummaries());
        GrowingMemoryFunction f = GrowingMemoryFunction.normal();
        try {
            f = (GrowingMemoryFunction) conf.getMemoryFunction();
        } catch (ClassCastException ex) {}
        setMemoryFunction(f);
        spinnerSegmentsPerDirection.setValue(conf.getMaxSegmentCountPerDirection());
        checkBoxAdaptive.setSelected(conf.getAdaptive());
        sliderMemoryFreeTargetFraction.setValue((int) (conf.getMemoryFreeTargetFraction() * 100));
        spinnerSegmentsToEvaluate.setValue(conf.getMinSegmentsForStats());
        
        base = conf.getBaseConfig().copy();
        comboBoxBaseType.setSelectedItem(base.type.toString());
    }
    
    private int sliderMemoryFunctionValueForParameters(double s) {
        return (int) Math.round(Math.pow(s, 1.0 / SLIDER_MEMORY_SCALING_CONSTANT) * 1000);
    }
    
    private void updateMemoryFunctionTable() {
        TableModel model = tableMemoryFunctionExamples.getModel();
        double s = Double.parseDouble(textFieldMemoryFunctionParameter.getText());
        GrowingMemoryFunction f = new GrowingMemoryFunction(s);
        for (int i = 1; i < 10; i++) {
            model.setValueAt(
                    (int) Math.ceil(f.target_nr_of_saved_segmentlikes((long)Math.pow(10, i))), 
                    i-1, 
                    1
            );
        }
    }
    
    private void setMemoryFunction(GrowingMemoryFunction f) {
        sliderMemoryFunctionParameter.setValue(sliderMemoryFunctionValueForParameters(f.s));
        textFieldMemoryFunctionParameter.setText(f.s + "");
        updateMemoryFunctionTable();
    }
    
    public SegmentalConfig getSegmentalConfiguration() {
        return new SegmentalConfig()
                .setMaxMemory(1000_000l * sliderMemory.getValue())
                .setUseSummaries(checkBoxSummaries.isSelected())
                .setMemoryFunction(new GrowingMemoryFunction(Double.parseDouble(textFieldMemoryFunctionParameter.getText())))
                .setMaxSegmentCountPerDirection(Integer.parseInt(spinnerSegmentsPerDirection.getValue().toString()))
                .setAdaptive(checkBoxAdaptive.isSelected())
                .setMemoryFreeTargetFraction(1.0 * sliderMemoryFreeTargetFraction.getValue() / 100)
                .setMinSegmentsForStats(Integer.parseInt(spinnerSegmentsToEvaluate.getValue().toString()))
                .setBaseConfig(base);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelMemory = new javax.swing.JLabel();
        sliderMemory = new javax.swing.JSlider();
        checkBoxAdaptive = new javax.swing.JCheckBox();
        checkBoxSummaries = new javax.swing.JCheckBox();
        textFieldMemory = new javax.swing.JTextField();
        seperatorMemory = new javax.swing.JSeparator();
        labelMemoryTotal = new javax.swing.JLabel();
        labelFractionAbsStates = new javax.swing.JLabel();
        textFieldFractionAbs = new javax.swing.JTextField();
        sliderFractionAbs = new javax.swing.JSlider();
        jSeparator1 = new javax.swing.JSeparator();
        labelMemoryFunction = new javax.swing.JLabel();
        textFieldMemoryFunctionParameter = new javax.swing.JTextField();
        seperatorMemoryFunction = new javax.swing.JSeparator();
        sliderMemoryFunctionParameter = new javax.swing.JSlider();
        labelMemoryFunctionS = new javax.swing.JLabel();
        buttonMemoryFunctionImprecise = new javax.swing.JButton();
        buttonMemoryFunctionNormal = new javax.swing.JButton();
        buttonMemoryFunctionPrecise = new javax.swing.JButton();
        scrollPaneTable = new javax.swing.JScrollPane();
        tableMemoryFunctionExamples = new javax.swing.JTable();
        jSeparator2 = new javax.swing.JSeparator();
        labelSegmentDistribution = new javax.swing.JLabel();
        seperatorSegmentDistribution = new javax.swing.JSeparator();
        labelSegmentDistributionSegmentsPerDirection = new javax.swing.JLabel();
        spinnerSegmentsPerDirection = new javax.swing.JSpinner();
        jSeparator3 = new javax.swing.JSeparator();
        labelAdaptivity = new javax.swing.JLabel();
        seperatorMemoryFunction1 = new javax.swing.JSeparator();
        labelAdaptivity1 = new javax.swing.JLabel();
        textFieldMemoryFreeTargetFraction = new javax.swing.JTextField();
        sliderMemoryFreeTargetFraction = new javax.swing.JSlider();
        labelSegmentDistributionSegmentsPerDirection1 = new javax.swing.JLabel();
        spinnerSegmentsToEvaluate = new javax.swing.JSpinner();
        jSeparator4 = new javax.swing.JSeparator();
        labelBase = new javax.swing.JLabel();
        seperatorMemoryFunction2 = new javax.swing.JSeparator();
        comboBoxBaseType = new javax.swing.JComboBox<>();
        buttonBaseEdit = new javax.swing.JButton();

        labelMemory.setText("Memory");

        sliderMemory.setMaximum(5000);
        sliderMemory.setMinimum(100);
        sliderMemory.setMinorTickSpacing(100);
        sliderMemory.setPaintTicks(true);
        sliderMemory.setValue(1000);
        sliderMemory.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMemoryStateChanged(evt);
            }
        });

        checkBoxAdaptive.setSelected(true);
        checkBoxAdaptive.setText("adaptive");

        checkBoxSummaries.setSelected(true);
        checkBoxSummaries.setText("use summaries");

        textFieldMemory.setEditable(false);
        textFieldMemory.setText("1.0GB");

        seperatorMemory.setOrientation(javax.swing.SwingConstants.VERTICAL);

        labelMemoryTotal.setText("Limit:");

        labelFractionAbsStates.setText("Fraction for abstract states:");

        textFieldFractionAbs.setEditable(false);
        textFieldFractionAbs.setText("0.1");

        sliderFractionAbs.setMaximum(25);
        sliderFractionAbs.setMinimum(5);
        sliderFractionAbs.setToolTipText("");
        sliderFractionAbs.setValue(10);
        sliderFractionAbs.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderFractionAbsStateChanged(evt);
            }
        });

        labelMemoryFunction.setText("Memory Function:");

        textFieldMemoryFunctionParameter.setEditable(false);
        textFieldMemoryFunctionParameter.setText("0.0359");

        seperatorMemoryFunction.setOrientation(javax.swing.SwingConstants.VERTICAL);

        sliderMemoryFunctionParameter.setMaximum(1000);
        sliderMemoryFunctionParameter.setMinimum(500);
        sliderMemoryFunctionParameter.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMemoryFunctionParameterStateChanged(evt);
            }
        });

        labelMemoryFunctionS.setText("s=");

        buttonMemoryFunctionImprecise.setText("imprecise");
        buttonMemoryFunctionImprecise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMemoryFunctionImpreciseActionPerformed(evt);
            }
        });

        buttonMemoryFunctionNormal.setText("normal");
        buttonMemoryFunctionNormal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMemoryFunctionNormalActionPerformed(evt);
            }
        });

        buttonMemoryFunctionPrecise.setText("precise");
        buttonMemoryFunctionPrecise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonMemoryFunctionPreciseActionPerformed(evt);
            }
        });

        tableMemoryFunctionExamples.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"10", "9"},
                {"100", "43"},
                {"1000", "101"},
                {"10^4", "164"},
                {"10^5", "229"},
                {"10^6", "293"},
                {"10^7", "357"},
                {"10^8", "421"},
                {"10^9", "485"}
            },
            new String [] {
                "Uses", "Effective Segmentlikes"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableMemoryFunctionExamples.getTableHeader().setReorderingAllowed(false);
        scrollPaneTable.setViewportView(tableMemoryFunctionExamples);
        if (tableMemoryFunctionExamples.getColumnModel().getColumnCount() > 0) {
            tableMemoryFunctionExamples.getColumnModel().getColumn(0).setResizable(false);
            tableMemoryFunctionExamples.getColumnModel().getColumn(0).setPreferredWidth(10);
            tableMemoryFunctionExamples.getColumnModel().getColumn(1).setResizable(false);
            tableMemoryFunctionExamples.getColumnModel().getColumn(1).setPreferredWidth(85);
        }

        labelSegmentDistribution.setText("Segment Distribution:");

        seperatorSegmentDistribution.setOrientation(javax.swing.SwingConstants.VERTICAL);

        labelSegmentDistributionSegmentsPerDirection.setText("Max. segments per direction:");

        spinnerSegmentsPerDirection.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));

        labelAdaptivity.setText("Adaptivity:");

        seperatorMemoryFunction1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        labelAdaptivity1.setText("free memory target faction:");

        textFieldMemoryFreeTargetFraction.setEditable(false);
        textFieldMemoryFreeTargetFraction.setText("0.85");

        sliderMemoryFreeTargetFraction.setMinimum(50);
        sliderMemoryFreeTargetFraction.setToolTipText("");
        sliderMemoryFreeTargetFraction.setValue(85);
        sliderMemoryFreeTargetFraction.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderMemoryFreeTargetFractionStateChanged(evt);
            }
        });

        labelSegmentDistributionSegmentsPerDirection1.setText("Min. segments needed to evaluate abstract state efficiency:");

        spinnerSegmentsToEvaluate.setModel(new javax.swing.SpinnerNumberModel(10, 1, null, 1));

        labelBase.setText("Base Simulator:");

        seperatorMemoryFunction2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        comboBoxBaseType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SSA", "TAU", "HYB" }));
        comboBoxBaseType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxBaseTypeActionPerformed(evt);
            }
        });

        buttonBaseEdit.setText("Edit");
        buttonBaseEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBaseEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelSegmentDistribution)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seperatorSegmentDistribution, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelSegmentDistributionSegmentsPerDirection)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spinnerSegmentsPerDirection, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelAdaptivity)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seperatorMemoryFunction1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(checkBoxAdaptive)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelSegmentDistributionSegmentsPerDirection1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(spinnerSegmentsToEvaluate, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelAdaptivity1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldMemoryFreeTargetFraction, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sliderMemoryFreeTargetFraction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGap(8, 8, 8))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelMemory)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seperatorMemory, javax.swing.GroupLayout.PREFERRED_SIZE, 6, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelFractionAbsStates)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldFractionAbs, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sliderFractionAbs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(sliderMemory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(checkBoxSummaries)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelMemoryTotal)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(textFieldMemory, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelMemoryFunction)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(seperatorMemoryFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelMemoryFunctionS)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(textFieldMemoryFunctionParameter, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sliderMemoryFunctionParameter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(buttonMemoryFunctionPrecise)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(buttonMemoryFunctionNormal)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(buttonMemoryFunctionImprecise))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(scrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())
                    .addComponent(jSeparator4)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelBase)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seperatorMemoryFunction2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxBaseType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonBaseEdit)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(seperatorMemory, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldMemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelMemory)
                                .addComponent(labelMemoryTotal)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sliderMemory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldFractionAbs)
                            .addComponent(labelFractionAbsStates)
                            .addComponent(sliderFractionAbs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkBoxSummaries)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelMemoryFunction)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(sliderMemoryFunctionParameter, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(textFieldMemoryFunctionParameter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelMemoryFunctionS)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(buttonMemoryFunctionImprecise)
                                    .addComponent(buttonMemoryFunctionNormal)
                                    .addComponent(buttonMemoryFunctionPrecise))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollPaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(seperatorMemoryFunction, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(spinnerSegmentsPerDirection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelSegmentDistributionSegmentsPerDirection))
                    .addComponent(seperatorSegmentDistribution)
                    .addComponent(labelSegmentDistribution))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelAdaptivity)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(checkBoxAdaptive)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelAdaptivity1)
                            .addComponent(textFieldMemoryFreeTargetFraction)
                            .addComponent(sliderMemoryFreeTargetFraction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spinnerSegmentsToEvaluate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelSegmentDistributionSegmentsPerDirection1)))
                    .addComponent(seperatorMemoryFunction1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(seperatorMemoryFunction2)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelBase)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(comboBoxBaseType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(buttonBaseEdit)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonMemoryFunctionImpreciseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMemoryFunctionImpreciseActionPerformed
        setMemoryFunction(GrowingMemoryFunction.imprecise());
    }//GEN-LAST:event_buttonMemoryFunctionImpreciseActionPerformed

    private void buttonMemoryFunctionNormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMemoryFunctionNormalActionPerformed
        setMemoryFunction(GrowingMemoryFunction.normal());
    }//GEN-LAST:event_buttonMemoryFunctionNormalActionPerformed

    private void buttonMemoryFunctionPreciseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonMemoryFunctionPreciseActionPerformed
        setMemoryFunction(GrowingMemoryFunction.precise());
    }//GEN-LAST:event_buttonMemoryFunctionPreciseActionPerformed

    private void sliderMemoryFunctionParameterStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMemoryFunctionParameterStateChanged
        textFieldMemoryFunctionParameter.setText(IO.significantFigures(Math.pow(1.0 / 1000 * sliderMemoryFunctionParameter.getValue(), SLIDER_MEMORY_SCALING_CONSTANT)));
        updateMemoryFunctionTable();
    }//GEN-LAST:event_sliderMemoryFunctionParameterStateChanged

    private void sliderMemoryStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMemoryStateChanged
        textFieldMemory.setText(IO.humanReadableByteCountSI(1l * sliderMemory.getValue() * 1000 * 1000));
    }//GEN-LAST:event_sliderMemoryStateChanged

    private void sliderFractionAbsStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderFractionAbsStateChanged
        textFieldFractionAbs.setText("" + IO.significantFigures(1.0 / 100 * sliderFractionAbs.getValue()));
    }//GEN-LAST:event_sliderFractionAbsStateChanged

    private void sliderMemoryFreeTargetFractionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderMemoryFreeTargetFractionStateChanged
        textFieldMemoryFreeTargetFraction.setText("" + IO.significantFigures(1.0 / 100 * sliderMemoryFreeTargetFraction.getValue()));
    }//GEN-LAST:event_sliderMemoryFreeTargetFractionStateChanged

    private void comboBoxBaseTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxBaseTypeActionPerformed
        String selected = comboBoxBaseType.getSelectedItem().toString();
        SimulatorConfig.Type type = SimulatorConfig.Type.typeFromString(selected);
        if (base.type != type) {
            base = SimulatorConfig.Type.defaultFor(type);
        }
    }//GEN-LAST:event_comboBoxBaseTypeActionPerformed

    private void buttonBaseEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBaseEditActionPerformed
        SimulatorConfig newBase = SimulatorConfigEditor.edit(base);
        if (newBase != null) {
            base = newBase;
        }
    }//GEN-LAST:event_buttonBaseEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBaseEdit;
    private javax.swing.JButton buttonMemoryFunctionImprecise;
    private javax.swing.JButton buttonMemoryFunctionNormal;
    private javax.swing.JButton buttonMemoryFunctionPrecise;
    private javax.swing.JCheckBox checkBoxAdaptive;
    private javax.swing.JCheckBox checkBoxSummaries;
    private javax.swing.JComboBox<String> comboBoxBaseType;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JLabel labelAdaptivity;
    private javax.swing.JLabel labelAdaptivity1;
    private javax.swing.JLabel labelBase;
    private javax.swing.JLabel labelFractionAbsStates;
    private javax.swing.JLabel labelMemory;
    private javax.swing.JLabel labelMemoryFunction;
    private javax.swing.JLabel labelMemoryFunctionS;
    private javax.swing.JLabel labelMemoryTotal;
    private javax.swing.JLabel labelSegmentDistribution;
    private javax.swing.JLabel labelSegmentDistributionSegmentsPerDirection;
    private javax.swing.JLabel labelSegmentDistributionSegmentsPerDirection1;
    private javax.swing.JScrollPane scrollPaneTable;
    private javax.swing.JSeparator seperatorMemory;
    private javax.swing.JSeparator seperatorMemoryFunction;
    private javax.swing.JSeparator seperatorMemoryFunction1;
    private javax.swing.JSeparator seperatorMemoryFunction2;
    private javax.swing.JSeparator seperatorSegmentDistribution;
    private javax.swing.JSlider sliderFractionAbs;
    private javax.swing.JSlider sliderMemory;
    private javax.swing.JSlider sliderMemoryFreeTargetFraction;
    private javax.swing.JSlider sliderMemoryFunctionParameter;
    private javax.swing.JSpinner spinnerSegmentsPerDirection;
    private javax.swing.JSpinner spinnerSegmentsToEvaluate;
    private javax.swing.JTable tableMemoryFunctionExamples;
    private javax.swing.JTextField textFieldFractionAbs;
    private javax.swing.JTextField textFieldMemory;
    private javax.swing.JTextField textFieldMemoryFreeTargetFraction;
    private javax.swing.JTextField textFieldMemoryFunctionParameter;
    // End of variables declaration//GEN-END:variables
}
